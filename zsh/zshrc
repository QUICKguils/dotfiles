#                __
#    ____  _____/ /_  __________
#   /_  / / ___/ __ \/ ___/ ___/
#  _ / /_(__  ) / / / /  / /__
# (_)___/____/_/ /_/_/   \___/
#
# Configuration personnelle de zsh
# --------------------------------

# Référence: http://zsh.sourceforge.net/Doc/Release/zsh_toc.html

# ========== Setup de l'historique ==========
setopt histignorealldups sharehistory
# Sauvegarder les 5000 dernières commandes zsh dans ~/.zsh_history
HISTSIZE=5000
SAVEHIST=5000
HISTFILE=~/.zsh_history

# # ========== Coloration ==========
# Les outils ls, grep, tree et fd utilisent la variable d'environnement
# LS_COLORS pour coloriser leurs sorties. Le fichier .dir_colors (que j'ai copié
# de arcticicestudio) sert à définir LS_COLORS. Et la commande ci-dessous ne
# fait que changer LS_COLORS (grâce à la commande `dircolors`) selon les
# directives énoncées dans .dir_colors.
test -r ~/.dir_colors && eval $(dircolors ~/.dir_colors)
alias ls='ls --color=auto'
alias dir='dir --color=auto'
alias vdir='vdir --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
# Couleurs pour GCC (tiré de bashrc)
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# ========== Autocomplétion ==========
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' menu select=2
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'

autoload -Uz compinit && compinit

# ========== Personnalisation de l'invite de commande ==========
# Ajout d'informations sur git dans l'invite de commande
autoload -Uz vcs_info
precmd_vcs_info() { vcs_info }
precmd_functions+=( precmd_vcs_info )
setopt prompt_subst
zstyle ':vcs_info:git:*' formats '%U%b'
zstyle ':vcs_info:*' enable git

# Apparence de l'invite de commande
symbol="▶"
PROMPT='%(!.%F{magenta}#. )%(?.%F{green}.%F{red})$symbol%f '
RPROMPT='%F{#5c6370}$vcs_info_msg_0_%u [%~]'

# ========== Keybindings/aliases ==========
# Choisir neovim comme éditeur par défaut
export EDITOR='nvim'
export VISUAL='nvim'
# Utiliser le mode vi dans le shell
bindkey -v

# Aliases
alias v='nvim'
alias la='ls -A'
alias lah='ls -lAh'
alias z='zathura'
alias g='git'
alias x='exit'
alias t='tmux'
alias o='xdg-open'
alias fl='figlet -t -f slant'
alias jl='julia --banner=no'
alias mlj='matlab -nodesktop -nosplash'
alias ml='matlab -nojvm'
alias py='python'

# Raccourcis de chemins
ing="$HOME/Documents/Ecole/Bloc_3"

# ========== reading tools ==========
# Choix du pager par défaut et du pager pour les pages de manuel
export PAGER="cat"
export MANPAGER="nvim +Man!"

# Configuration de bat, un cat amélioré.
# Cf. https://github.com/sharkdp/bat
export BAT_THEME="OneHalfDark"
export BAT_STYLE="auto"

# ========== searching tools ==========
# Chargement de fzf. Repo situé à ~/.dotfiles/neovim/plugin/fzf
# Setup fzf
if [[ ! "$PATH" == */home/guil/.dotfiles/neovim/plugin/fzf/bin* ]]; then
  export PATH="${PATH:+${PATH}:}/home/guil/.dotfiles/neovim/plugin/fzf/bin"
fi
# Auto-completion
[[ $- == *i* ]] && source "/home/guil/.dotfiles/neovim/plugin/fzf/shell/completion.zsh" 2> /dev/null
# Key bindings
source "/home/guil/.dotfiles/neovim/plugin/fzf/shell/key-bindings.zsh"

# non-piped fzf: use fd to feed fzf instead of find.
# Cf. https://github.com/sharkdp/fd
export FZF_DEFAULT_COMMAND="fd -H"
# fzf customization (see man page)
export FZF_DEFAULT_OPTS="-m --height=60% --reverse --bind=ctrl-p:toggle-preview \
--color=bg:#282c34,bg+:#2c323c,fg:#5c6370,fg+:#abb2bf:bold,hl:#98c379,hl+:#98c379:bold,\
border:#c678dd,pointer:#e06c75:bold,marker:#be5046,prompt:#61afef,\
spinner:#e5c07b,info:#e5c07b"

# fzf file search, with preview using bat.
export FZF_CTRL_T_COMMAND="fd -Ht f"
export FZF_CTRL_T_OPTS="--preview='bat --color=always --style=''changes'' -r :30 {}'\
                        --preview-window=border-sharp"

# fzf directory search, with preview using tree.
export FZF_ALT_C_COMMAND="fd -Ht d"
export FZF_ALT_C_OPTS="--preview='tree -C {} | head -n 30'\
                       --preview-window=border-sharp"

# Explore command history with fzf
export FZF_CTRL_R_OPTS="--reverse"

# fzf trigger sequence (default:**)
#export FZF_COMPLETION_TRIGGER="**"
#export FZF_COMPLETION_OPTS=""

# ========== Ajouts au PATH ==========
# Enregistrement de julia dans le PATH
export PATH="$PATH:/usr/local/julia/bin"
# Enregistrement de matlab dans le PATH
export PATH="$PATH:/usr/local/MATLAB/R2018b/bin"
# Distribution latex (TexLive 2021)
export PATH="$PATH:/run/media/guil/Data/texlive/2021/bin/x86_64-linux"
export MANPATH="$MANPATH:/run/media/guil/Data/texlive/2021/texmf-dist/doc/man"
export INFOPATH="$INFOPATH:/run/media/guil/Data/texlive/2021/texmf-dist/doc/info"
# Gestionnaire de paquets miniconda
__conda_setup="$('/home/guil/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/guil/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/guil/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/guil/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# Enlèvement de l'indication «(base)» dans l'invite de commande:
# aller voir le fichier ~/miniconda3/etc/conda/activate.d/remove-base-prompt.sh

# ========== Ajouts de plugins ==========
# Complétions supplémentaires
fpath=($HOME/.config/zsh/zsh-completions/src $fpath)
# Coloration syntaxique des commandes introduites
source $HOME/.config/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
# Recherche dans l'hstorique des commandes
source $HOME/.config/zsh/zsh-history-substring-search/zsh-history-substring-search.zsh
bindkey "^[[A" history-substring-search-up
bindkey "^[[B" history-substring-search-down
