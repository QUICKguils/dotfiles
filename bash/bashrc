#     __               __
#    / /_  ____ ______/ /_  __________
#   / __ \/ __ `/ ___/ __ \/ ___/ ___/
#  / /_/ / /_/ (__  ) / / / /  / /__
# /_.___/\__,_/____/_/ /_/_/   \___/
#
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
# j'ai commenté le if pour avoir les couleurs définies localement, dans
# ~/.dir_colors
# if [ -x /usr/bin/dircolors ]; then
    # test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
	test -r ~/.dir_colors && eval $(dircolors ~/.dir_colors)
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
# fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# ==============================================================================
# A partir d'ici, trucs que j'ai rajouté moi-même
# ==============================================================================

# ========== Keybindings/aliases ==========
# Choisir neovim comme éditeur par défaut
export EDITOR="nvim"
export VISUAL="nvim"

# Aliases
alias v='nvim'
alias la='ls -A'
alias lah='ls -lAh'
alias z='zathura'
alias g='git'
alias x='exit'
alias t='tmux'
alias o='xdg-open'
alias fl='figlet -t -f slant'
alias jl='julia --banner=no'
alias mlj='matlab -nodesktop -nosplash'
alias ml='matlab -nojvm'
alias py='python'

# Raccourcis de chemins
ing="$HOME/Documents/Ecole/Bloc_3"

# Changement de dossier automatique ("cd" implicite)
shopt -s autocd

# ========== reading tools ==========
# Choix du pager par défaut et du pager pour les pages de manuel
export PAGER="cat"
export MANPAGER="nvim +Man!"

# Configuration de bat, un cat amélioré.
# Cf. https://github.com/sharkdp/bat
export BAT_THEME="OneHalfDark"
export BAT_STYLE="auto"

# ========== searching tools ==========
# Chargement de fzf. Repo situé à ~/.dotfiles/neovim/plugin/fzf
# Setup fzf
if [[ ! "$PATH" == */home/guil/.dotfiles/neovim/plugin/fzf/bin* ]]; then
  export PATH="${PATH:+${PATH}:}/home/guil/.dotfiles/neovim/plugin/fzf/bin"
fi
# Auto-completion
[[ $- == *i* ]] && source "/home/guil/.dotfiles/neovim/plugin/fzf/shell/completion.bash" 2> /dev/null
# Key bindings
source "/home/guil/.dotfiles/neovim/plugin/fzf/shell/key-bindings.bash"

# non-piped fzf: use fd to feed fzf instead of find.
# Cf. https://github.com/sharkdp/fd
export FZF_DEFAULT_COMMAND="fd -H"
# fzf customization (see man page)
export FZF_DEFAULT_OPTS="-m --height=60% --reverse --bind=ctrl-p:toggle-preview \
--color=bg:#282c34,bg+:#2c323c,fg:#5c6370,fg+:#abb2bf:bold,hl:#98c379,hl+:#98c379:bold,\
border:#c678dd,pointer:#e06c75:bold,marker:#be5046,prompt:#61afef,\
spinner:#e5c07b,info:#e5c07b"

# fzf file search, with preview using bat.
export FZF_CTRL_T_COMMAND="fd -Ht f"
export FZF_CTRL_T_OPTS="--preview='bat --color=always --style=''changes'' -r :30 {}'\
                        --preview-window=border-sharp"

# fzf directory search, with preview using tree.
export FZF_ALT_C_COMMAND="fd -Ht d"
export FZF_ALT_C_OPTS="--preview='tree -C {} | head -n 30'\
                       --preview-window=border-sharp"

# Explore command history with fzf
export FZF_CTRL_R_OPTS="--reverse"

# fzf trigger sequence (default:**)
#export FZF_COMPLETION_TRIGGER="**"
#export FZF_COMPLETION_OPTS=""

# ========== Ajouts au PATH ==========
# Enregistrement de julia dans le PATH
export PATH="$PATH:/usr/local/julia/bin"
# Enrefistrement de matlab dans ls PATH
export PATH="$PATH:/usr/local/MATLAB/R2018b/bin"
